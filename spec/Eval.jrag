import mystery2020.runtime.*;
import mystery2020.runtime.Runtime;
import beaver.Symbol;
import mystery2020.IntLiteralException;
import mystery2020.MType;

/**
 * Expression evaluation
 */
aspect Eval {

    interface EvalInterface {
	Value eval(Runtime rt);
    }
    Expr implements EvalInterface;

    public Value
    BinOpSequence.eval(Runtime rt) {
	throw new RuntimeException("Not supported; should have been rewritten");
    }

    public Value
    BinOp.eval(Runtime rt) {
	throw new RuntimeException("FIXME-5"); // !!!!!!!!!!!!!!!
    }

    public Value
    Number.eval(Runtime rt) {
	try {
	    Value v = new Value(MType.INTEGER, Integer.parseInt(this.getNumber()));
	    return v;
	} catch (NumberFormatException exn) {
	    throw new IntLiteralException(Symbol.getLine(this.getStart()),
					  Symbol.getColumn(this.getStart()),
					  this.getNumber());
	}
    }

    public Value
    ID.eval(Runtime rt) {
	throw new RuntimeException("FIXME-6"); // !!!!!!!!!!!!!!!
    }

    public Value
    Subscription.eval(Runtime rt) {
	throw new RuntimeException("FIXME-7"); // !!!!!!!!!!!!!!!
    }

    public Value
    Call.eval(Runtime rt) {
	rt.runCall();
	throw new RuntimeException("FIXME-8"); // !!!!!!!!!!!!!!!
    }
}
